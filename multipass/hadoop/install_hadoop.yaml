---
- name: Install hadoop environment
  hosts: vm
  remote_user: ubuntu
  tasks:
    - name: Check if /opt/hadoop exists
      stat:
        path: /opt/hadoop
      register: hadoop_dir
    - name: Copy contents from /home/ubuntu/hadoop to /opt/hadoop
      shell: rsync -a --chown=ubuntu:ubuntu /home/ubuntu/hadoop/ /opt/hadoop/
      become: true
      when: not hadoop_dir.stat.exists
    - name: Set JAVA_HOME based on architecture
      set_fact:
        java_home_path: "{{ '/usr/lib/jvm/java-11-openjdk-amd64' if ansible_architecture == 'x86_64' else '/usr/lib/jvm/java-11-openjdk-arm64' }}"
    - name: Append environment variables to .bashrc
      lineinfile:
        path: /home/ubuntu/.bashrc
        line: "{{ item }}"
        state: present
      loop:
        - 'export HADOOP_HOME=/opt/hadoop'
        - 'export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin'
        - 'export JAVA_HOME={{ java_home_path }}'
    - name: Replace JAVA_HOME export in hadoop-env.sh
      lineinfile:
        path: /opt/hadoop/etc/hadoop/hadoop-env.sh
        regexp: '^#\s*export\s+JAVA_HOME='
        line: 'export JAVA_HOME={{ java_home_path }}'
        state: present
    - name: Copy core-site.xml to instances
      copy:
        src: etc/core-site.xml
        dest: /opt/hadoop/etc/hadoop/core-site.xml
    - name: Copy hdfs-site.xml to instances
      copy:
        src: etc/hdfs-site.xml
        dest: /opt/hadoop/etc/hadoop/hdfs-site.xml
    - name: Copy yarn-site.xml to instances
      copy:
        src: etc/yarn-site.xml
        dest: /opt/hadoop/etc/hadoop/yarn-site.xml
    - name: Copy mapred-site.xml to instances
      copy:
        src: etc/mapred-site.xml
        dest: /opt/hadoop/etc/hadoop/mapred-site.xml
    - name: Check if /home/ubuntu/.ssh/id_rsa exists
      stat:
        path: /home/ubuntu/.ssh/id_rsa
      register: rsa_file
    - name: Generate SSH key pair
      command: ssh-keygen -t rsa -b 4096 -f /home/ubuntu/.ssh/id_rsa -N ""
      when: not rsa_file.stat.exists
    - name: Read id_rsa.pub
      slurp:
        src: /home/ubuntu/.ssh/id_rsa.pub
      register: id_rsa
    - name: Write content to local file
      copy:
        content: "{{ id_rsa['content'] | b64decode }}"
        dest: ./rsa.pub.{{ inventory_hostname }}
      delegate_to: localhost

- name: Merge individual RSA files into a single file
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Merge RSA files
      shell: cat ./rsa.pub.vm* >> ./rsa.pub.tmp
      args:
        executable: /bin/bash
    - name: Remove vm rsa file
      shell: rm ./rsa.pub.vm*
      args:
        executable: /bin/bash

- name: Copy RSA keys to VMs
  hosts: vm
  remote_user: ubuntu
  tasks:
    - name: Read vm authorized_keys file
      slurp:
        src: /home/ubuntu/.ssh/authorized_keys
      register: current_authorized_keys
    - name: Append each line of local file to remote file
      lineinfile:
        path: /home/ubuntu/.ssh/authorized_keys
        line: "{{ item }}"
        state: present
      with_items: "{{ lookup('file', './rsa.pub.tmp') | trim }}"
      when: item not in current_authorized_keys['content'] | b64decode
      no_log: true
- name: Delete rsa.pub.tmp from localhost
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Remove vm rsa file
      shell: rm -f ./rsa.pub.tmp
      args:
        executable: /bin/bash